{"version":3,"sources":["Component/Background/images/scene1.jpg","Component/Background/images/scene2.jpg","Component/Background/images/scene4.jpg","Component/Background/images/scene5.jpg","Component/Background/images/scene6.jpg","Component/Background/images/scene7.jpg","Component/Background/images/scene8.jpg","Component/Background/images/scene9.jpg","Component/Background/images/dragon.jpg","Component/Background/images/sunset.jpg","Component/BoardNav/BoardTitleMenu.tsx","Component/Background/BackgroundSelection.tsx","Component/Background/BackgroundType.tsx","Component/MainMenu.tsx","Component/Team.tsx","Component/BoardNav/BoardNav.tsx","Component/Card/CardForm.tsx","Component/Card/ListItem.tsx","Component/Card/CheckList.tsx","Component/CardModal/CardModal.tsx","Component/Card/Card.tsx","Component/List/ListMenu.tsx","Component/List/List.tsx","App.tsx","serviceWorker.js","index.js","Component/Background/images/scene3.jpg"],"names":["module","exports","__webpack_require__","p","BoardTitleMenu","_ref","handleShowMenu","handleNameSubmit","placeholder","title","inputLabel","buttonLabel","react_default","a","createElement","className","onClick","onSubmit","type","name","backgrounds","Colors","Images","Scene1","Scene2","Scene3","Scene4","Scene5","Scene6","Scene7","Scene8","Scene9","Dragon","Sunset","BackgroundSelection","state","props","setBackground","newBackground","_this","handleBackgroundChange","_this2","this","colorMenu","map","key","style","backgroundColor","concat","imageMenu","backgroundImage","Component","BackgroundType","backgroundType","string","handleColorMenu","toggleOptionsMenu","handleImageMenu","toggleImageMenu","changeBackground","Background_BackgroundSelection","menuTitles","MainMenu","menuTitle","TypeMenuTitle","toggleMenuControl","setState","toggleBackgroundMenu","prevState","handleBackgroundColor","handleBackgroundImage","render","MMisOpen","Background_BackgroundType","toggleCloseButton","index_es","icon","faTimes","React","Team","teamMembers","member","id","deleteMember","initials","BoardNav","BoardName","showNameMenu","inviteMember","starColor","team","e","preventDefault","newName","target","elements","value","inputLength","length","alert","handleInviteMember","handleMemberSubmit","newMember","abbreviate","nameAbbr","split","charAt","join","console","log","handleMemberAdd","newMem","uuid","replace","push","window","confirm","newMembers","filter","toggleYellow","_this$state","Component_MainMenu","menuState","color","Component_Team","BoardNav_BoardTitleMenu","CardForm","cardVal","handleCardValChange","addToCard","toggleCardForm","rows","onChange","ListItem","isEditable","textValue","itemPosition","componentDidMount","item","onClickTextField","onChangeTextField","handleTextFormSubmit","index","complete","onDeleteCheckListItem","editedChecklistItem","editCheckListItem","_this$props","onToggleCheckBox","checked","CheckList","addingNewItem","editingTitle","checkListTitle","checkList","handleTitleSubmitForm","changeCheckListTitle","addNewCheckListItem","listItem","addCheckListItem","onChangeTitleForm","toggleCheckListTitle","toggleNewItem","items","deleteCheckList","checkListExists","tasks","progressPct","reduce","acc","percentageComplete","width","checklistItem","Card_ListItem","addItem","dateStyle","height","CardModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onDateChange","createdAt","editedCard","objectSpread","card","dueDate","editCard","onCalendarFocusChange","focused","calendarFocused","createNewCheckList","cardId","itemToAdd","toConsumableArray","newCheckList","position","editedCheckList","currIndex","toggledCheckListItem","editedCheckListItem","handleDescriptionChange","description","submitDescription","addCardDescription","isSubmitted","isEdit","editDescription","descripton","currentDate","moment","isModalOpen","toggleModal","list","deleteCard","content","display","isBefore","format","Card_CheckList","disabled","react_dates","readOnly","date","onFocusChange","hideKeyboardShortcutsPanel","numberOfMonths","isOutsideRange","Card","react","react_beautiful_dnd_esm","draggableId","provided","assign","draggableProps","dragHandleProps","ref","innerRef","CardModal_CardModal","disableInteractiveElementBlocking","isDragDisabled","ListMenu","menuDisplay","titleName","node","handleToggleListMenu","contains","toggleListMenu","displayCopyList","onCopyTitleChange","deleteList","listId","copyList","document","addEventListener","removeEventListener","List","showCardForm","listMenuOpen","handleSaveTitle","componentMount","prevProps","toggleTitleForm","saveListTitle","addCard","_this$props$list","handleTitleChange","cardList","autoFocus","List_ListMenu","droppableId","droppableProps","Card_Card","Card_CardForm","App","styleType","addList","lists","newList","defineProperty","taskIds","listOrder","copyCards","cardsToCopy","cards","forEach","idToCopy","arguments","undefined","listCopy","indexOf","_this$copyCards","slice","newCards","taskId","newLists","newListOrder","splice","_this$state2","newCard","hasOwnProperty","cardName","newTaskIds","task","list_copy","onDragEnd","result","_objectSpread4","destination","source","home","foreign","homeTaskIds","Array","from","newHome","foreignTaskIds","newForeign","newState","newCardIds","sample_card","sample_list","_this$state3","Component_BoardNav_BoardNav","direction","Component_List_List","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95eb057a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scene1.03811d32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene2.1d01566a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene4.c3461ca4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene5.133f90dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene6.cf2b528c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene7.a33cadf5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene8.c17ddaef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene9.caa6d43a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dragon.d1049b7a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.de0fc6d3.jpg\";","import React from \"react\";\r\n\r\nconst BoardTitleMenu = ({  \r\n  handleShowMenu,\r\n  handleNameSubmit,  \r\n  placeholder,\r\n  title,\r\n  inputLabel,\r\n  buttonLabel\r\n\r\n}: any) => (\r\n    <div className=\"board-menu\">\r\n      <div className=\"board-menu--header\">\r\n        <h2 className=\"board-menu--title\">{title}</h2>\r\n        <button className=\"board-menu--x\" onClick={handleShowMenu}><i className=\"fas fa-times\"></i></button>\r\n      </div>\r\n\r\n      <div className=\"board-menu--form\">\r\n        <form onSubmit={handleNameSubmit}>\r\n          <label>{inputLabel}</label>\r\n          <input\r\n            className=\"board-menu--input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder={placeholder}\r\n          />\r\n          <button className=\"menu-btn button-green\">{buttonLabel}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\nexport default BoardTitleMenu;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Scene1 from './images/scene1.jpg';\r\nimport Scene2 from './images/scene2.jpg';\r\nimport Scene3 from './images/scene3.jpg';\r\nimport Scene4 from './images/scene4.jpg';\r\nimport Scene5 from './images/scene5.jpg';\r\nimport Scene6 from './images/scene6.jpg';\r\nimport Scene7 from './images/scene7.jpg';\r\nimport Scene8 from './images/scene8.jpg';\r\nimport Scene9 from './images/scene9.jpg';\r\nimport Dragon from './images/dragon.jpg';\r\nimport Sunset from './images/sunset.jpg';\r\n\r\nlet backgrounds = {\r\n    Colors: ['#3D348B', '#7678ED', '#F7B801', '#F18701', '#F35B04', '#119DA4', '#19647E'],\r\n    Images: [Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8, Scene9, Dragon, Sunset],\r\n}\r\n\r\nclass BackgroundSelection extends Component {\r\n    state = {\r\n\r\n    };\r\n\r\n    props: any;\r\n    setBackground = (newBackground: any) => { this.props.handleBackgroundChange(newBackground)}\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className={(this.props.colorMenu) ? \"background-options-main background-options-main-show\" : \"background-options-main background-options-main-hide\"}>\r\n                    {backgrounds.Colors.map((newBackground) =>\r\n                        <div className=\"background-options\" key={newBackground}>\r\n                            <div className=\"background-option--wrapper\">\r\n                                <div\r\n                                    style={{ backgroundColor: `${newBackground}` }}\r\n                                    className=\"background-options background-option\"\r\n                                    onClick={() => this.setBackground(newBackground)}\r\n                                >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className={(this.props.imageMenu) ? \"background-options-main background-options-main-show\" : \"background-options-main background-options-main-hide\"}>\r\n                    {backgrounds.Images.map((newBackground) =>\r\n                        <div className=\"background-options\" key={newBackground}>\r\n                            <div className=\"background-option--wrapper\">\r\n                                <div\r\n                                    style={{ backgroundImage: `url(${newBackground})` }}\r\n                                    className=\"background-options background-option\"\r\n                                    onClick={() => this.setBackground(newBackground)}\r\n                                >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n\r\n \r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BackgroundSelection;\r\n\r\n// <div className={(this.props.colorMenu) ? \"background-options-main background-options-main-show\" : \"background-options-main background-options-main-hide\"}>\r\n// {backgrounds.Colors.map((backgroundColor) =>\r\n//     <div className=\"background-options\" key={backgroundColor}>\r\n//         <div className=\"background-option--wrapper\">\r\n//             <div\r\n//                 style={{ backgroundColor }}\r\n//                 className=\"background-options background-option\"\r\n//                 onClick={() => this.setBackground(backgroundColor)}\r\n//             >\r\n//             </div>\r\n//         </div>\r\n//     </div>\r\n// )}\r\n// </div>\r\n// <div className={(this.props.imageMenu) ? \"background-options-main background-options-main-show\" : \"background-options-main background-options-main-hide\"}>\r\n// {backgrounds.Images.map((backgroundImage) =>\r\n//     <div className=\"background-options\" key={backgroundImage}>\r\n//         <div className=\"background-option--wrapper\">\r\n//             <div\r\n//                 style={{ backgroundImage: `url(${backgroundImage})` }}\r\n//                 className=\"background-options background-option\"\r\n//                 onClick={() => this.setBackground(backgroundImage)}\r\n//             >\r\n//             </div>\r\n//         </div>\r\n//     </div>\r\n// )}\r\n// </div>","import React, { Component } from \"react\";\r\nimport BackgroundSelection from './BackgroundSelection';\r\nimport Scene3 from './images/scene3.jpg';\r\nimport { string } from \"prop-types\";\r\n\r\nclass BackgroundType extends Component {\r\n    state = {\r\n        backgroundType: string\r\n    };\r\n\r\n    handleColorMenu = ()  => {    \r\n        this.props.toggleOptionsMenu();\r\n    }\r\n    \r\n    handleImageMenu = ()  => {\r\n        this.props.toggleImageMenu(); \r\n    }\r\n    props: any;\r\n\r\n    \r\n\r\n    render() : JSX.Element {\r\n    \r\n        return (\r\n            <div className={this.props.changeBackground ? \"background-menu-main background-menu-main-show\" : \"background-menu-main background-menu-main-hide\"}>\r\n            <BackgroundSelection \r\n                colorMenu={this.props.colorMenu} \r\n                imageMenu={this.props.imageMenu}\r\n                backgroundType={this.state.backgroundType}\r\n                handleBackgroundChange={this.props.handleBackgroundChange}\r\n                />    \r\n            <div className=\"background-types\">\r\n                    <div className=\"background-types--wrapper\"><div onClick={this.handleColorMenu} className=\"background-menu background-menu--colors\"></div><h3>Colors</h3></div>\r\n                    <div className=\"background-types--wrapper\"><div onClick={this.handleImageMenu} className=\"background-menu background-menu--images\" style={{backgroundImage: `url(${Scene3})`}}></div><h3>Photos</h3></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BackgroundType;","import React from 'react';\r\nimport BackgroundType from './Background/BackgroundType';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst menuTitles = ['Menu', 'Change Background', ['Colors', 'Photos']];\r\n\r\nclass MainMenu extends React.Component {\r\n\r\n    state = {\r\n        menuTitle: menuTitles[0],\r\n        TypeMenuTitle: true,\r\n\r\n        changeBackground: false,\r\n\r\n        colorMenu: false,\r\n        imageMenu: false,\r\n    }\r\n    props: any;\r\n    toggleMenuControl = () => {\r\n        if (this.state.colorMenu || this.state.imageMenu) {\r\n            this.setState(() => ({\r\n                colorMenu: false,\r\n                imageMenu: false\r\n            }))\r\n        } else this.toggleBackgroundMenu()\r\n    }\r\n\r\n    //closes and opens the type menu\r\n    toggleBackgroundMenu = () => {\r\n\r\n        //arrow shows when type menu and option menus are open\r\n        this.setState((prevState: any) => ({\r\n            changeBackground: !prevState.changeBackground,\r\n            menuTitle: prevState.changeBackground ? 'Menu' : 'Change Background'\r\n        }))\r\n    }\r\n\r\n    //closes and opens the color options menu\r\n    toggleOptionsMenu = () => {\r\n        this.setState((prevState: any) => ({\r\n            colorMenu: !prevState.colorMenu,\r\n            menuTitle: !prevState.colorMenu ? 'Colors' : 'Change Background'\r\n        }))\r\n        this.props.handleBackgroundColor();\r\n\r\n    }\r\n\r\n    //closes and opens the image options menu\r\n    toggleImageMenu = () => {\r\n\r\n        this.setState((prevState: any) => ({\r\n            imageMenu: !prevState.colorMenu,\r\n            menuTitle: !prevState.imageMenu ? 'Photos' : 'Change Background'\r\n        }))\r\n        this.props.handleBackgroundImage();\r\n    }\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={this.props.MMisOpen ? \"main-menu__wrapper\" : \"main-menu__wrapper--hide\"}>\r\n                <div className={this.props.MMisOpen ? \"main-menu main-menu--show\" : \"main-menu main-menu--hide \"}>\r\n                    <BackgroundType\r\n                        changeBackground={this.state.changeBackground}\r\n                        toggleOptionsMenu={this.toggleOptionsMenu}\r\n                        toggleImageMenu={this.toggleImageMenu}\r\n                        colorMenu={this.state.colorMenu}\r\n                        imageMenu={this.state.imageMenu}\r\n\r\n                        handleBackgroundChange={this.props.handleBackgroundChange}\r\n                        handleBackgroundColor={this.props.handleBackgroundColor}\r\n                        handleBackgroundImage={this.props.handleBackgroundImage}\r\n                    />\r\n                    <div className=\"main-menu__section\">\r\n                        {this.state.changeBackground ? (\r\n                            <button\r\n                                className=\"main-menu-arrow main-menu-arrow-show\"\r\n                                onClick={this.toggleMenuControl}>\r\n                                <i className=\"fas fa-arrow-left\"></i>\r\n                            </button>\r\n                        ) : (\r\n                                <button\r\n                                    className=\"main-menu-arrow main-menu-arrow-hide\"\r\n                                    onClick={this.toggleMenuControl}>\r\n                                    <i className=\"fas fa-arrow-left\"></i>\r\n                                </button>\r\n                            )\r\n                        }\r\n\r\n\r\n                        <h2 className=\"main-menu__title\">{this.state.menuTitle}</h2>\r\n                        <button\r\n                            className=\"btn--close-menu\"\r\n                            onClick={this.props.toggleCloseButton}\r\n                        ><FontAwesomeIcon icon={faTimes} />\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"main-menu__section\">\r\n                        <ul className=\"options__list\">\r\n                            <li className=\"option__item icon__item\" onClick={this.toggleBackgroundMenu}><i className=\"fas fa-brush menu-icon\"></i>Change Background</li>\r\n                            <li className=\"option__item icon__item\"><i className=\"fas fa-filter menu-icon\"></i>Filter Cards</li>\r\n                            <li className=\"option__item icon__item\"><i className=\"fas fa-fill menu-icon\"></i>Stickers</li>\r\n                            <li className=\"option__item icon__item\"><i className=\"fas fa-ellipsis-h menu-icon\"></i>More</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"main-menu__section\">\r\n                        <h3 className=\"activity-menu__title icon__item\"><i className=\"fas fa-tasks menu-icon\"></i>Activity</h3>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainMenu;","import React, { Component } from \"react\";\r\n\r\ninterface TeamMember {\r\n    id: string,\r\n    name: string,\r\n    initials: string\r\n}\r\n\r\nclass Team extends Component {\r\n    state = {\r\n\r\n    }\r\n    props: {\r\n        teamMembers: TeamMember[],\r\n        deleteMember(member: TeamMember): void \r\n    };\r\n    render(): JSX.Element {\r\n\r\n        return (\r\n            <div className=\"full-team-members\">\r\n                {this.props.teamMembers.map((member: any) =>\r\n                    <div className=\"team-member\" key={member.id} onClick={() => this.props.deleteMember(member.id)}>\r\n                        {member.initials}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Team;","import React, { Component } from \"react\";\r\nimport BoardTitleMenu from './BoardTitleMenu';\r\nimport MainMenu from \"../MainMenu\";\r\nimport Team from \"../Team\";\r\nimport uuid from \"uuid\";\r\n//import SimpleStorage from \"react-simple-storage\";\r\n\r\nclass BoardNav extends Component {\r\n\r\n  state = {\r\n    BoardName: \"Add Board Name\",\r\n\r\n    showNameMenu: false,\r\n    inviteMember: false,\r\n\r\n    MMisOpen: false,\r\n    starColor: 'white',\r\n\r\n    team: [\r\n      {\r\n        id: '1',\r\n        name: 'Nikola Tesla',\r\n        initials: 'NT'\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Stephen Hawking',\r\n        initials: 'SH'\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Isaac Newton',\r\n        initials: 'IN'\r\n      },\r\n      {\r\n        id: '4',\r\n        name: 'Alan Turing',\r\n        initials: 'AT'\r\n      }\r\n\r\n    ],\r\n  };\r\n\r\n  props: any;\r\n\r\n  // -- handle main menu --\r\n\r\n  toggleCloseButton = (e: any) => {\r\n    e.preventDefault();\r\n    this.setState((prevState: any) => ({\r\n      MMisOpen: !prevState.MMisOpen\r\n    }))\r\n  }\r\n\r\n  // -- update board name menu --\r\n  handleShowMenu = () => {\r\n    const { showNameMenu } = this.state;\r\n    this.setState({\r\n      showNameMenu: !showNameMenu\r\n    });\r\n  };\r\n\r\n  // -- handle board name submission --\r\n  handleNameSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const newName = e.target.elements.name.value\r\n    const inputLength = newName.length;\r\n    if (inputLength === 0) {\r\n      alert('please enter a name')\r\n    } else if (inputLength !== 0) {\r\n      this.setState({\r\n        BoardName: newName,\r\n        showNameMenu: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  // -- update member invite menu ---\r\n  handleInviteMember = () => {\r\n    const { inviteMember } = this.state;\r\n    this.setState({\r\n      inviteMember: !inviteMember\r\n    });\r\n  };\r\n\r\n  // -- handle member add submission --\r\n  handleMemberSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    var newMember = e.target.elements.name.value\r\n    const inputLength = newMember.length;\r\n    if (inputLength === 0) {\r\n      alert('please enter a name')\r\n    } else if (inputLength !== 0) {\r\n      this.abbreviate(newMember);\r\n      // let updateTeam = []\r\n\r\n    }\r\n  }\r\n\r\n  abbreviate = (newMember: any) => {\r\n    let nameArr = newMember.split(' ').map((name: any) => name.charAt(0));\r\n    let nameAbbr = nameArr.join('');\r\n    console.log(nameAbbr);\r\n    this.handleMemberAdd(newMember, nameAbbr)\r\n  }\r\n\r\n  handleMemberAdd = (newMember: any, nameAbbr: any) => {\r\n    const { team } = this.state;\r\n    // generate member id\r\n    const memId = uuid().replace(/-/g, \"\");\r\n    // add a new member\r\n    const newMem = {\r\n      id: memId,\r\n      name: newMember,\r\n      initials: nameAbbr\r\n    };\r\n\r\n    team.push(newMem);\r\n    this.setState({\r\n      team,\r\n      inviteMember: false,\r\n    });\r\n  };\r\n\r\n  // ------ delete member -------\r\n  deleteMember = (id: any) => {\r\n    const { team } = this.state;\r\n    const willDelete = window.confirm('Remove this team member?')\r\n\r\n    if (willDelete) {\r\n      const newMembers = team.filter(member => member.id !== id);\r\n      console.log(newMembers);\r\n      this.setState({ team: newMembers });\r\n    }\r\n\r\n  }\r\n\r\n  toggleYellow = () => {\r\n    this.setState((prevState: any) => ({\r\n      starColor: (prevState.starColor === '#f2d600' ? 'white' : '#f2d600')\r\n    }));\r\n  };\r\n\r\n\r\n  render(): JSX.Element {\r\n    const { showNameMenu, BoardName, inviteMember } = this.state;\r\n    return (\r\n      <div className=\"board-nav-wrapper\">\r\n        {/*<SimpleStorage parent={this} prefix={\"TrelloClone\"} />*/}\r\n        <MainMenu\r\n          menuState={false}\r\n          MMisOpen={this.state.MMisOpen}\r\n          toggleCloseButton={this.toggleCloseButton}\r\n          handleBackgroundChange={this.props.handleBackgroundChange}\r\n          handleBackgroundColor={this.props.handleBackgroundColor}\r\n          handleBackgroundImage={this.props.handleBackgroundImage}\r\n        />\r\n        <div className=\"board-nav\">\r\n          <div className=\"menu-wrapper\">\r\n            <button\r\n              onClick={this.handleShowMenu}\r\n              className=\"btn-nav board-nav--title\">\r\n              {BoardName}\r\n            </button>\r\n            <button\r\n              className=\"btn-nav board-star\" onClick={this.toggleYellow} style={{ color: `${this.state.starColor}` }}>\r\n              <i className=\"far fa-star\"></i>\r\n            </button>\r\n            <span className=\"divider\"></span>\r\n            <span className=\"group\">Team</span>\r\n            <span className=\"divider\"></span>\r\n            <div className=\"full-team\">\r\n\r\n              <Team\r\n                teamMembers={this.state.team}\r\n                deleteMember={this.deleteMember} />\r\n              <div className=\"team-size\">\r\n                {this.state.team.length}\r\n              </div>\r\n\r\n              <button className=\"invite-btn\" onClick={this.handleInviteMember}><i className=\"fas fa-user-plus\"></i>Invite</button>\r\n\r\n              {\r\n                inviteMember && (\r\n                  <BoardTitleMenu\r\n                    handleShowMenu={this.handleInviteMember}\r\n                    handleNameSubmit={this.handleMemberSubmit}\r\n\r\n                    title={\"Add a Member\"}\r\n                    inputLabel={\"Name\"}\r\n                    placeholder={\"Enter name\"}\r\n                    buttonLabel={\"Add\"}\r\n\r\n                  />\r\n                )}\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"btn-nav board-nav--menu\" onClick={this.toggleCloseButton}><i className=\"fas fa-ellipsis-h\"></i>Show Menu</button>\r\n          {\r\n            showNameMenu && (\r\n              <BoardTitleMenu\r\n                handleShowMenu={this.handleShowMenu}\r\n                handleNameSubmit={this.handleNameSubmit}\r\n\r\n                title={\"Rename Board\"}\r\n                inputLabel={\"Name\"}\r\n                placeholder={BoardName}\r\n                buttonLabel={\"Rename\"}\r\n              />\r\n            )}\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BoardNav;\r\n\r\n// {this.state.team.map((member)=>\r\n//   <Team\r\n//     teamMembers={this.state.team} key={member.name}/>\r\n//   )}  ","import React from \"react\";\r\n\r\nconst CardForm  = ({\r\n  cardVal,\r\n  handleCardValChange,\r\n  addToCard,\r\n  toggleCardForm\r\n}: any) :JSX.Element => (\r\n  <form className=\"card--form\" onSubmit={addToCard}>\r\n    <textarea\r\n      rows={3}\r\n      value={cardVal}\r\n      onChange={handleCardValChange}\r\n      placeholder=\"Enter a title for this card...\"\r\n    />\r\n    <button type=\"submit\">Add Card</button>\r\n    <span className=\"cancel-btn\" onClick={toggleCardForm}>\r\n    <i className=\"fas fa-times\"></i>\r\n    </span>\r\n  </form>\r\n);\r\n\r\nexport default CardForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass ListItem extends Component {\r\n\r\n    state = {\r\n        isEditable: false,\r\n        textValue:'',\r\n        itemPosition:''\r\n    }\r\n    props: any;\r\n    componentDidMount = () => {\r\n        if (this.props.item !== this.state.textValue) {\r\n            this.setState({ textValue : this.props.item });\r\n        }\r\n    }    \r\n\r\n    onClickTextField = () => {\r\n        this.setState({ isEditable : true });\r\n    }\r\n\r\n    onChangeTextField = (textValue: string) => {\r\n        this.setState({ textValue });\r\n    }\r\n\r\n    handleTextFormSubmit = (index: number, complete: boolean) => {\r\n        if (this.state.textValue === '') {\r\n            this.props.onDeleteCheckListItem(this.props.index);\r\n        } else {\r\n        const editedChecklistItem = {item: this.state.textValue, complete}\r\n        this.props.editCheckListItem(index, editedChecklistItem);\r\n        }\r\n        this.setState({ isEditable: false });\r\n    }\r\n\r\n    render() {\r\n        const {item, complete, onDeleteCheckListItem, onToggleCheckBox, index} = this.props;\r\n        return (\r\n            <li className=\"checklist__item\">\r\n                <input \r\n                        type=\"checkbox\" name=\"item\" \r\n                        value={item} \r\n                        checked={complete} \r\n                        onChange={()=>onToggleCheckBox(index)}\r\n                        className=\"checklist__complete\"\r\n                />\r\n                {(this.state.isEditable ? (\r\n                    <form onSubmit={(e)=> {\r\n                        e.preventDefault();\r\n                        this.handleTextFormSubmit(index, complete);\r\n                        }}>\r\n                        <input \r\n                            type='text' \r\n                            value={this.state.textValue} \r\n                            onChange={(e)=> {\r\n                                this.onChangeTextField(e.target.value);\r\n                            }}\r\n                        />\r\n                    </form>\r\n                ) : (\r\n                    <p className=\"checklist__name\" onClick={()=> {this.onClickTextField()}}>{item}</p>\r\n                ))}\r\n                <button className=\"btn btn--checklist-delete\" onClick={()=>onDeleteCheckListItem(index)}><i className=\"fas fa-times close-item\"></i></button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nconst _calculatePercent =(items: any) => {\r\n    let tasksDone: number = items.reduce((acc: any, item: any)=> item.complete ? acc+1 : acc,0);\r\n    let progressPct = (tasksDone / items.length) * 100;\r\n    return progressPct;\r\n\r\n}\r\n\r\nclass CheckList extends Component {\r\n    state = {\r\n        addingNewItem : false,\r\n        editingTitle : false,\r\n        checkListTitle : ''\r\n    }\r\n    props: any;\r\n    componentDidMount = () => {\r\n        if (this.props.checkList.title !== this.state.checkListTitle) {\r\n            this.setState({ checkListTitle : this.props.checkList.title });\r\n        }\r\n    }\r\n\r\n    handleTitleSubmitForm = () => {\r\n        this.props.changeCheckListTitle(this.state.checkListTitle);\r\n        this.setState({ editingTitle : false });\r\n    }\r\n\r\n    addNewCheckListItem = (listItem: any) => {\r\n        if (listItem) {\r\n            this.props.addCheckListItem({item: listItem, complete: false});\r\n        }\r\n        this.setState({ addingNewItem : false });\r\n    }\r\n\r\n    onChangeTitleForm = (title: string) => {\r\n        if (title) {\r\n            this.setState({ checkListTitle : title });\r\n        }\r\n    }\r\n\r\n    toggleCheckListTitle = () => {\r\n        this.setState({ editingTitle : true })\r\n    }\r\n    toggleNewItem = () => {\r\n        this.setState({ addingNewItem : true })\r\n    };\r\n\r\n\r\n    render() {\r\n        const { checkList, deleteCheckList, onToggleCheckBox, editCheckListItem, onDeleteCheckListItem } = this.props\r\n        const checkListExists = (checkList && checkList.tasks);\r\n        let progressPct = checkList.tasks.length !==0 ? _calculatePercent(checkList.tasks) : false;\r\n        let percentageComplete = progressPct ? { width: `${progressPct}%` } : {};\r\n        return (\r\n            <div className=\"checklist\">\r\n                <div className=\"checklist__heading\">\r\n                    {!this.state.editingTitle ? \r\n                    (<h2 \r\n                    className=\"checklist__title\"\r\n                    ><i className=\"far fa-check-square left-side-icons\"></i>{checkList.title}</h2>) :\r\n                    (<form onSubmit={(e)=> {\r\n                        e.preventDefault();\r\n                        this.handleTitleSubmitForm();\r\n                    }}>\r\n                        <input \r\n                        type=\"text\" \r\n                        value={this.state.checkListTitle} \r\n                        onChange={(e)=> {\r\n                            e.preventDefault();\r\n                            this.onChangeTitleForm(e.target.value);\r\n                        }}\r\n                        />\r\n                    </form>)\r\n                    }\r\n                    <button className=\"btn btn--checklist-edit\" onClick={this.toggleCheckListTitle}>Edit...</button>\r\n                    <button className=\"btn btn--checklist-delete\" onClick={deleteCheckList}>Delete...</button>\r\n                </div>\r\n                <div className=\"checklist-content\">\r\n                    {\r\n                        <div className=\"progress-bar\">\r\n                            <div className=\"progress-bar__inner\" style={percentageComplete}>\r\n                            <span className=\"progress-percent-display\">{progressPct === 0 ? \"\\xa0\" : progressPct + \"%\"}</span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    }\r\n                    <ul className=\"checklist__items\">\r\n                        {checkListExists && checkList.tasks.map((checklistItem: any, index: number) => \r\n                        <ListItem \r\n                                key={index}\r\n                                index={index}\r\n                                checklistItem={checklistItem}\r\n                                item={checklistItem.item}\r\n                                complete={checklistItem.complete}\r\n                                onToggleCheckBox={onToggleCheckBox}\r\n                                editCheckListItem={editCheckListItem}\r\n                                onDeleteCheckListItem={onDeleteCheckListItem}\r\n                            />)\r\n                        }\r\n                    </ul>\r\n                    {!this.state.addingNewItem ? (\r\n                        <p \r\n                        className=\"add-new-checkList__placeholder\"\r\n                        onClick={this.toggleNewItem}\r\n                        >Add an item...</p>\r\n                    ) :\r\n                    (<form \r\n                    className=\"add-new-checkList\"\r\n                    placeholder=\"Add an item...\"\r\n                    onSubmit={(e: any)=>{\r\n                        e.preventDefault();\r\n                        this.addNewCheckListItem(e.target.elements.addItem.value);\r\n                        }\r\n                    }>\r\n                        <input type=\"text\" name=\"addItem\"/>\r\n                        <button className=\"btn btn--submit\">Add</button>\r\n                    </form>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CheckList;","import React, { Component, FormEvent } from 'react';\r\nimport 'react-dates/initialize';\r\nimport { SingleDatePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport '../CardModal/datepicker.css';\r\nimport moment, { Moment } from 'moment';\r\nimport CheckList from '../Card/CheckList';\r\nimport { any } from 'prop-types';\r\n\r\nconst dateStyle = {\r\n    width: '75px',\r\n    height: '30px'\r\n}\r\n\r\nexport default class CardModal extends Component {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            calendarFocused: false,\r\n            isSubmitted: false,\r\n            isEdit: false,\r\n            descripton: \"\",         \r\n        }\r\n    }\r\n    state: {\r\n        calendarFocused: boolean,\r\n        isSubmitted: boolean,\r\n        isEdit: boolean,\r\n        createdAt?: Moment,\r\n        descripton: string\r\n    };\r\n    props: any;\r\n    onDateChange = (createdAt: any) => {\r\n        const editedCard = { ...this.props.card, dueDate: createdAt };\r\n        this.props.editCard(this.props.card.id, editedCard);\r\n    }\r\n\r\n    onCalendarFocusChange = (focused : {focused: boolean;}) => {\r\n        this.setState(() => ({ calendarFocused: focused }));\r\n    }\r\n    createNewCheckList = () => {\r\n        const newCheckList: {\r\n            title: string,\r\n            tasks: any[]\r\n        } = {\r\n            title: \"To-Do\",\r\n            tasks: []\r\n        }\r\n        const editedCard = {\r\n            ...this.props.card,\r\n            checkList: newCheckList\r\n        }\r\n        this.props.editCard(this.props.cardId, editedCard);\r\n    }\r\n\r\n    deleteCheckList = () => {\r\n        const editedCard = {\r\n            ...this.props.card\r\n        }\r\n        delete editedCard.checkList;\r\n        this.props.editCard(this.props.cardId, editedCard);\r\n    }\r\n\r\n    addCheckListItem = (itemToAdd: any) => {\r\n        if (itemToAdd) {\r\n            const tasks = [...this.props.card.checkList.tasks, itemToAdd];\r\n            const newCheckList = { ...this.props.card.checkList, tasks };\r\n            const editedCard = {\r\n                ...this.props.card,\r\n                checkList: newCheckList\r\n            }\r\n            this.props.editCard(this.props.cardId, editedCard);\r\n        }\r\n    }\r\n\r\n    changeCheckListTitle = (title: any) => {\r\n        const checkList = {\r\n            ...this.props.card.checkList,\r\n            title\r\n        }\r\n        const editedCard = {\r\n            ...this.props.card,\r\n            checkList\r\n        }\r\n        this.props.editCard(this.props.cardId, editedCard);\r\n    }\r\n\r\n    editCheckListItem = (position: any, editedCheckList: any) => {\r\n        const tasks = this.props.card.checkList.tasks.map((checklistItem: any, index: number) => (index !== position ? checklistItem : editedCheckList));\r\n\r\n        const editedCard = {\r\n            ...this.props.card,\r\n            checkList: {\r\n                title: this.props.card.checkList.title,\r\n                tasks\r\n            }\r\n        }\r\n        this.props.editCard(this.props.cardId, editedCard);\r\n    }\r\n\r\n\r\n    onDeleteCheckListItem = (index: number) => {\r\n        const tasks = this.props.card.checkList.tasks.filter((item: any, currIndex: number) => currIndex !== index);\r\n        const editedCard = {\r\n            ...this.props.card,\r\n            checkList: {\r\n                title: this.props.card.checkList.title,\r\n                tasks\r\n            }\r\n        }\r\n        this.props.editCard(this.props.cardId, editedCard);\r\n    }\r\n\r\n\r\n    onToggleCheckBox = (index: number)  => {\r\n        const toggledCheckListItem = this.props.card.checkList.tasks[index];\r\n        const editedCheckListItem = { item: toggledCheckListItem.item, complete: !toggledCheckListItem.complete };\r\n        const tasks = this.props.card.checkList.tasks.map((item: any, currIndex: number) => {\r\n            return (currIndex === index ? editedCheckListItem : item);\r\n        });\r\n        const editedCard = {\r\n            ...this.props.card,\r\n            checkList: {\r\n                title: this.props.card.checkList.title,\r\n                tasks\r\n            }\r\n        }\r\n        this.props.editCard(this.props.cardId, editedCard);\r\n    }\r\n\r\n    handleDescriptionChange = (e: any) => {\r\n        const description = e.target.value\r\n        this.setState({ description })\r\n    }\r\n\r\n    submitDescription = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        const { id } = this.props.card\r\n        const { description }: any = this.state\r\n        this.props.addCardDescription(id, description)\r\n        this.setState({\r\n            isSubmitted: true,\r\n            isEdit: true\r\n        })\r\n    }\r\n\r\n    editDescription = () => {\r\n        this.setState({\r\n            isSubmitted: false,\r\n            isEdit: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const currentDate = moment();\r\n        const { card, isModalOpen, toggleModal, cardId, list, deleteCard, content } = this.props;\r\n        const { description, isSubmitted, isEdit }: any = this.state\r\n        return (\r\n            <div className=\"card-modal\" style={{ display: isModalOpen === cardId ? 'block' : 'none' }}>\r\n                <div className=\"card-modal__content\">\r\n                    <div className=\"card-modal__content-title modal-elements\">\r\n                        <h4><i className=\"far fa-window-maximize left-side-icons\"></i><span>{card.content}</span></h4>\r\n                        <button onClick={toggleModal}><i className=\"fas fa-times close-modal\"></i></button>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"left-col\">\r\n                            <div className=\"card__details\">\r\n                                {card.dueDate && (\r\n                                    <div className=\"card__due-date\">\r\n                                        <h3 className=\"due-date__title\"><i className=\"fa fa-calendar left-side-icons\"></i>Due Date</h3>\r\n                                        <p className={(currentDate.isBefore(card.dueDate) ? \"due-date__date\" : \"due-date__date due-date__date--overdue\")}>\r\n                                            {moment(card.dueDate).format('MMM Do YYYY')}\r\n                                        </p>\r\n                                    </div>)}\r\n                            </div>\r\n                            <section className=\"col double-col\">\r\n                                <div className=\"description\">\r\n                                    <h5 className=\"modal-elements description__title\">\r\n                                        <i className=\"fas fa-align-left left-side-icons\"></i>\r\n                                        Description {\r\n                                            // show edit button when isSubmited is false and isEdit is true\r\n                                            !isSubmitted || isEdit && (<span onClick={this.editDescription}>Edit</span>)}</h5>\r\n                                    {// if isSubmitted is false, show form. Else, hide form and show description\r\n                                        !isSubmitted && <form className=\"description__form\" onSubmit={this.submitDescription}>\r\n                                            <textarea\r\n                                                rows={5}\r\n                                                className=\"description__form-textarea\"\r\n                                                value={description}\r\n                                                placeholder=\"Add a more detailed description...\"\r\n                                                onChange={this.handleDescriptionChange}\r\n                                            ></textarea>\r\n                                            <button>Save</button>\r\n                                        </form>\r\n                                    }\r\n                                    {\r\n                                        isSubmitted && <p>{description}</p>\r\n                                    }\r\n                                </div>\r\n                                {card.checkList && (\r\n                                    <CheckList\r\n                                        style={dateStyle}\r\n                                        checkList={card.checkList}\r\n                                        onToggleCheckBox={this.onToggleCheckBox}\r\n                                        addCheckListItem={this.addCheckListItem}\r\n                                        onDeleteCheckListItem={this.onDeleteCheckListItem}\r\n                                        editCheckListItem={this.editCheckListItem}\r\n                                        deleteCheckList={this.deleteCheckList}\r\n                                        changeCheckListTitle={this.changeCheckListTitle}\r\n                                    />\r\n                                )}\r\n                            </section>\r\n                        </div>\r\n\r\n                        <div className=\"right-col\">\r\n                            <aside className=\"col\">\r\n                                <p className=\"modal-aside-title\">add to card</p>\r\n                                <button onClick={this.createNewCheckList} disabled={card.checkList}><i className=\"fa fa-check-square\"></i> <span>Checklist</span></button>\r\n\r\n                                <div className=\"datePicker__wrapper\">\r\n                                    <div className=\"datePicker__icon\">\r\n                                        <i className=\"fa fa-calendar-alt\"></i>\r\n                                    </div>\r\n                                    <SingleDatePicker\r\n                                        id=\"1\"\r\n                                        placeholder={\"Due Date\"}\r\n                                        readOnly={true}\r\n                                        date={this.state.createdAt}\r\n                                        onDateChange={this.onDateChange}\r\n                                        focused={this.state.calendarFocused}\r\n                                        onFocusChange={this.onCalendarFocusChange}\r\n                                        hideKeyboardShortcutsPanel={true}\r\n                                        numberOfMonths={1}\r\n                                        isOutsideRange={() => false}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <p className=\"modal-aside-title\">actions</p>\r\n                                <button onClick={() => {\r\n                                    if (window.confirm(\"Delete \" + content + \"?\")) {\r\n                                        deleteCard(cardId, list);\r\n                                    }\r\n                                }\r\n\r\n                                }><i className=\"fa fa-trash\"></i> <span>Delete</span></button>\r\n                            </aside>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { faTextHeight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CardModal from \"../CardModal/CardModal\"\r\nimport { fstat } from \"fs\";\r\n\r\nexport default class Card extends React.Component {\r\n\r\n    props: any;\r\n    render() : JSX.Element{\r\n        const { toggleModal, isModalOpen, content, editCard, deleteCard, cardId, list, card, addCardDescription } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <Draggable draggableId={this.props.cardId} index={this.props.index}>\r\n                    {(provided) => (\r\n                        <li\r\n                            className=\"card\"\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef}\r\n                            onClick={()=> {toggleModal(this.props.cardId)}}\r\n                        >\r\n                            {provided.placeholder}\r\n                            {content}\r\n                        \r\n                        </li>\r\n                    )}\r\n                    \r\n                </Draggable>\r\n                <CardModal disableInteractiveElementBlocking={true} isDragDisabled={false} draggableProps={null} dragHandleProps={null} content={content} deleteCard={deleteCard} cardId={cardId} list={list} card={card} toggleModal={toggleModal} isModalOpen={isModalOpen} editCard={editCard} addCardDescription={addCardDescription} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass ListMenu extends Component {\r\n\r\n  state = {\r\n    menuDisplay: 'default',\r\n    titleName: ''\r\n  }\r\n  props: any;\r\n  node: any;\r\n  UNSAFE_componentWillMount() {\r\n    document.addEventListener(\"mousedown\", this.handleToggleListMenu, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleToggleListMenu, false);\r\n  }\r\n\r\n  handleToggleListMenu = (e: any) => {\r\n    if (this.node.contains(e.target)) {\r\n      return;\r\n    }\r\n    this.props.toggleListMenu();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ titleName: this.props.title });\r\n  }\r\n  \r\n  displayCopyList = () => {\r\n    this.setState({ menuDisplay: 'copyList' });\r\n  }\r\n\r\n  onCopyTitleChange = (titleName: string) => {\r\n    this.setState({ titleName }); \r\n  }\r\n\r\n  render = () => {\r\n    const { toggleListMenu, deleteList, listId } = this.props\r\n\r\n    switch (this.state.menuDisplay) {\r\n      case 'copyList':\r\n        return (\r\n          <div className=\"list-menu\" ref={node => this.node = node}>\r\n            <header className=\"list-menu__header\">\r\n              <p className=\"list-menu__header-title\">Copy List</p>\r\n              <button onClick={toggleListMenu} className=\"list-menu__header-close-btn\"><i className=\"fas fa-times\"></i></button>\r\n            </header>\r\n            <section className=\"action-list\">\r\n              <h4 className=\"copy-list__title\">Name</h4>\r\n              <div className=\"copy-menu__title-input\">\r\n                <textarea\r\n                  onChange={(e) => { this.onCopyTitleChange(e.target.value) }}\r\n                  className=\"title-input__text\"\r\n                  value={this.state.titleName} />\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  let title = this.state.titleName || this.props.title;\r\n                  this.props.copyList(listId, title);\r\n                  toggleListMenu();\r\n                }}\r\n                className=\"btn--menu btn--submit btn--copy-memu\">\r\n                Create List\r\n                </button>\r\n            </section>\r\n          </div>\r\n        )\r\n      default:\r\n        return (\r\n          <div className=\"list-menu\" ref={node => this.node = node}>\r\n            <header className=\"list-menu__header\">\r\n              <p className=\"list-menu__header-title\">List Actions</p>\r\n              <button onClick={toggleListMenu} className=\"list-menu__header-close-btn\"><i className=\"fas fa-times\"></i></button>\r\n            </header>\r\n            <section className=\"action-list\">\r\n              <button className=\"action-list__btn\"\r\n                onClick={this.displayCopyList}\r\n              >Copy List...</button>\r\n              <button className=\"action-list__btn\"\r\n                onClick={() => {\r\n                  deleteList(listId);\r\n                }}\r\n              >Delete List...</button>\r\n            </section>\r\n          </div>\r\n        )\r\n    }\r\n  }\r\n}\r\n\r\nexport default ListMenu","import React, { Component, Fragment, FormEvent } from \"react\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport CardForm from \"../Card/CardForm\";\r\nimport Card from \"../Card/Card\";\r\nimport ListMenu from \"./ListMenu\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    isEdit: false,\r\n    isSubmitted: true,\r\n    showCardForm: false,\r\n    cardVal: \"\",\r\n    listMenuOpen: false,\r\n    // MOVED ISMODALOPEN FROM CARD TO LIST\r\n    isModalOpen: '',\r\n  };\r\n  node: any;\r\n  props: any;\r\n  // MOVED TOGGALMODAL FROM CARD TO LIST\r\n  toggleModal = (cardId: any) => {\r\n    this.setState((prevState: any) =>{\r\n       return  {\r\n        isModalOpen: (prevState.isModalOpen === '' ?  cardId : '')\r\n    }});\r\n  }\r\n  \r\n  UNSAFE_componentWillMount() {\r\n    document.addEventListener(\"mousedown\", this.handleSaveTitle, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleSaveTitle, false);\r\n  }\r\n\r\n  handleSaveTitle = (e: any) => {\r\n    if (this.node.contains(e.target)) {\r\n      return;\r\n    }\r\n    // if empty, list will be deleted when user clicks outside out if\r\n    if (!this.props.list.title) {\r\n      this.props.deleteList(this.props.list.id)\r\n    } else {\r\n      this.setState({\r\n        isEdit: false,\r\n        isSubmitted: true\r\n      })\r\n    }\r\n  }\r\n  componentMount = (prevProps: any) => {\r\n    if (prevProps !== this.props) {\r\n      if (!this.props.isSubmitted) {\r\n        console.log(\"setting List Form Up\");\r\n        this.setState({ isSubmitted: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleTitleForm = () => {\r\n    const { isEdit } = this.state;\r\n    this.setState({\r\n      isEdit: !isEdit\r\n    });\r\n  };\r\n\r\n  saveListTitle = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    // if empty alert user\r\n    if (!this.props.list.title) {\r\n      alert(\"List cannot be blank\");\r\n    }\r\n    // else set isEdit to false\r\n    else {\r\n      this.setState({\r\n        isEdit: false,\r\n        isSubmitted: true\r\n      });\r\n    }\r\n  };\r\n\r\n  // CARD\r\n  toggleCardForm = () => {\r\n    const { showCardForm } = this.state;\r\n    this.setState({\r\n      showCardForm: !showCardForm\r\n    });\r\n  };\r\n\r\n  handleCardValChange = (e: any) => {\r\n    this.setState({\r\n      cardVal: e.target.value\r\n    });\r\n  };\r\n\r\n  addToCard = (e: Event) => {\r\n    e.preventDefault();\r\n    const { cardVal } = this.state;\r\n    // if cardVal is empty, alert user\r\n    if (!cardVal) {\r\n      alert(\"please add a card\");\r\n    } else {\r\n      this.props.addCard(this.props.list.id, cardVal);\r\n      this.setState({\r\n        cardVal: \"\"\r\n      });\r\n    }\r\n    this.setState({\r\n      showCardForm: !this.state.showCardForm\r\n    })\r\n  };\r\n\r\n  toggleListMenu = () => {\r\n    this.setState({\r\n      listMenuOpen: !this.state.listMenuOpen\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { isEdit, isSubmitted, showCardForm, cardVal, listMenuOpen, isModalOpen } = this.state;\r\n    const { id, title } = this.props.list;\r\n    const { handleTitleChange, cardList, addCardDescription } = this.props;\r\n    return (\r\n      <Draggable\r\n        draggableId={this.props.listId}\r\n        index={this.props.index}\r\n        isDragDisabled={false}\r\n      >\r\n        {(provided) => (\r\n          <div\r\n            className=\"list\"\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <div className=\"list--title\" ref={node => this.node = node}>\r\n              {// if form has not been submitted, show form. Also, show form if isEdit is true\r\n                !isSubmitted || isEdit ? (\r\n                  <form\r\n                    onSubmit={this.saveListTitle}\r\n                    className=\"list--form\" >\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"list--form-input\"\r\n                      autoFocus={true}\r\n                      value={title}\r\n                      onChange={e => handleTitleChange(id, e.target.value)}\r\n                    />\r\n                    {// if editing list title, no need to show \"Add List\" button\r\n                      !isEdit && <button>Add List</button>}\r\n                    {\r\n                      isEdit && <button>Edit List</button>}\r\n                  </form>\r\n                ) : (\r\n                    <Fragment>\r\n                      <h3 onClick={this.toggleTitleForm}>{title}</h3>\r\n                      <button className=\"open-list-menu-btn\" onClick={this.toggleListMenu}><i className=\"fas fa-ellipsis-h fa-sm\"></i></button>\r\n                      {\r\n                        listMenuOpen &&\r\n                        <ListMenu\r\n\r\n                          toggleListMenu={this.toggleListMenu}\r\n                          copyList={this.props.copyList}\r\n                          deleteList={this.props.deleteList}\r\n                          listId={id}\r\n                          title={title}\r\n                        />\r\n                      }\r\n\r\n                    </Fragment>\r\n                  )}\r\n            </div>\r\n            {provided.placeholder}\r\n\r\n            {\r\n              <Droppable\r\n                droppableId={this.props.listId}\r\n                type=\"task\"\r\n              >\r\n\r\n                {(provided) => (\r\n                  <ul\r\n                    className=\"card-list\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.droppableProps}\r\n                  >\r\n                    {provided.placeholder}\r\n                    {cardList.map((card: any, index: number) => (\r\n                      <Card\r\n                        key={card.id}\r\n                        cardId={card.id}\r\n                        content={card.content}\r\n                        index={index}\r\n                        card={card}\r\n                        deleteCard={this.props.deleteCard}\r\n                        list={this.props.list}\r\n                        editCard={this.props.editCard}\r\n                        addCardDescription={addCardDescription}\r\n                        toggleModal={this.toggleModal}\r\n                        isModalOpen={this.state.isModalOpen}\r\n                      >\r\n                      </Card>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </Droppable>\r\n            }\r\n\r\n            {// if showCardForm is true, show form\r\n              showCardForm && (\r\n                <CardForm\r\n                  cardVal={cardVal}\r\n                  handleCardValChange={this.handleCardValChange}\r\n                  addToCard={this.addToCard}\r\n                  toggleCardForm={this.toggleCardForm}\r\n                />\r\n              )}\r\n\r\n            {// if isSubmitted is true, user can click \"Add a card\" to toggle form\r\n              isSubmitted && !showCardForm && (\r\n                <p className=\"add-card-btn\" onClick={this.toggleCardForm}>\r\n                  + <span>Add a card...</span>\r\n                </p>\r\n              )}            \r\n          </div>)}\r\n\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n//import SimpleStorage, { clearStorage } from \"react-simple-storage\";\r\nimport 'normalize.css';\r\nimport \"./App.scss\";\r\n\r\n// use uuid to generate random id's\r\nimport uuid from \"uuid\";\r\n\r\nimport \"./App.scss\";\r\nimport BoardNav from \"./Component/BoardNav/BoardNav\";\r\n\r\nimport List from \"./Component/List/List\";\r\nimport Scene3 from './Component/Background/images/scene3.jpg';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      styleType: { backgroundImage: `url(${Scene3})` },\r\n      backgroundType: '',\r\n      cards: {'sample_card': {\r\n        id: 'sample_card',\r\n        content: 'Sample Card'\r\n      }},\r\n      lists: {'sample_list':{\r\n        id: 'sample_list',\r\n        title: \"Sample List\",\r\n        taskIds: ['sample_card']\r\n        }\r\n      },\r\n      listOrder: ['sample_list']\r\n    };\r\n  }\r\n  state: any;\r\n  props: any;\r\n  handleBackgroundColor = () => { this.setState({ backgroundType: 'Colors' }) }\r\n\r\n  handleBackgroundImage = () => { this.setState({ backgroundType: 'Images' }) }\r\n\r\n  handleBackgroundChange = (newBackground: string) => {\r\n    let styleType = ((this.state.backgroundType === 'Colors') ? { backgroundColor: `${newBackground}` } : { backgroundImage: `url(${newBackground})` })\r\n    this.setState({ styleType })\r\n  }\r\n\r\n\r\n  addList = () => {\r\n    const { lists } = this.state;\r\n    const listId = uuid().replace(/-/g, \"\");\r\n    const newList = Object.assign(lists, {\r\n      [listId]: {\r\n        id: listId,\r\n        title: \"\",\r\n        taskIds: []\r\n      }\r\n    });\r\n    this.setState({\r\n      lists: newList\r\n    });\r\n    // add the created list inside the listOrder array\r\n    for (let list in lists) {\r\n      this.setState({\r\n        listOrder: [...this.state.listOrder, list]\r\n      });\r\n    }\r\n    // console.log(lists);\r\n  };\r\n\r\n  //We need to make copies of the cards from the original List, and add those to the list copy.\r\n  copyCards = (cardsToCopy:any) => {\r\n    const cards = {...this.state.cards};\r\n    const taskIds: any = [];\r\n    cardsToCopy.forEach((card: any) => {\r\n      const id = uuid().replace(/-/g, \"\");\r\n      cards[id] = {...cards[card]};\r\n      cards[id].id = id;\r\n      taskIds.push(id);\r\n    });\r\n    return {cards, taskIds};\r\n  }\r\n\r\n  copyList = (idToCopy: string, title=\"\") => {\r\n    const id = uuid().replace(/-/g, \"\");\r\n    const listCopy = {...this.state.lists[idToCopy]};\r\n    listCopy.id = id;\r\n    if (title) {\r\n      listCopy.title = title;\r\n    }\r\n    const index = this.state.listOrder.indexOf(idToCopy);\r\n    const lists = {...this.state.lists, [id]:listCopy};\r\n    const {cards, taskIds} = this.copyCards(listCopy.taskIds);\r\n    lists[id].taskIds = taskIds;\r\n    const listOrder = this.state.listOrder.slice(0, index+1).concat(id).concat(this.state.listOrder.slice(index+1));\r\n    this.setState({ cards, lists, listOrder });\r\n  }\r\n\r\n\r\n  deleteList = (id: string) => {\r\n    const { cards, lists, listOrder } = this.state;\r\n    const taskIds = lists[id].taskIds;\r\n    const newCards = { ...cards };\r\n    taskIds.forEach((taskId: string) => delete newCards[taskId]);\r\n    const newLists = { ...lists };\r\n    delete newLists[id];\r\n    let index = listOrder.indexOf(id);\r\n    const newListOrder = [...listOrder];\r\n    newListOrder.splice(index, 1);\r\n    this.setState({\r\n      cards: newCards,\r\n      lists: newLists,\r\n      listOrder: newListOrder\r\n    });\r\n  };\r\n\r\n  // edit list title\r\n  handleTitleChange = (id: string, e: any) => {\r\n    const { lists } = this.state;\r\n    for (let list in lists) {\r\n      if (lists[list].id === id) {\r\n        lists[list].title = e;\r\n      }\r\n    }\r\n    this.setState({\r\n      lists: lists\r\n    });\r\n  };\r\n\r\n  addCard = (id: string, e: any) => {\r\n    const { cards, lists } = this.state;\r\n    // generate card id\r\n    const cardId = uuid().replace(/-/g, \"\");\r\n    // make a new card\r\n    const newCard = {\r\n      [cardId]: {\r\n        id: cardId,\r\n        content: e\r\n      }\r\n    };\r\n\r\n    // add the new card inside the cards object\r\n    Object.assign(cards, newCard);\r\n\r\n    this.setState({\r\n      cards\r\n    });\r\n\r\n    // loop through lists object\r\n    for (let list in lists) {\r\n      if (lists.hasOwnProperty(list)) {\r\n        // check if id's are equal\r\n        if (lists[list].id === id) {\r\n          // loop through cards object\r\n          for (let card in newCard) {\r\n            // add card to taskIds array\r\n            lists[list].taskIds = [...lists[list].taskIds, card];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      lists\r\n    });\r\n  };\r\n\r\n  editCard = (id: string, editedCard: any) => {\r\n    const cards = { ...this.state.cards };\r\n    cards[id] = editedCard;\r\n    this.setState({\r\n      cards\r\n    });\r\n  }\r\n\r\n  // add a description to a card\r\n  addCardDescription = (id: string, description: string) => {\r\n    const { cards } = this.state\r\n    for (let card in cards) {\r\n      if (cards[card].id === id) {\r\n        return Object.assign(cards[card], { description: description });\r\n      }\r\n    }\r\n    this.setState({\r\n      cards: { ...cards }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  deleteCard = (cardName: string, list: any) => {\r\n    const newTaskIds = list.taskIds.filter((task: string) => task !== cardName);\r\n    const newCards = { ...this.state.cards };\r\n    delete newCards[cardName];\r\n    const list_copy = { ...this.state.lists };\r\n    for (let key in list_copy) {\r\n      if (list_copy[key].id === list.id) {\r\n        list_copy[key] = { ...list, taskIds: newTaskIds };\r\n      }\r\n    }\r\n    this.setState({ cards: newCards, lists: list_copy });\r\n  };\r\n\r\n  onDragEnd = (result: any) => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    if (type === 'column') {\r\n      const newListOrder = Array.from(this.state.listOrder);\r\n      newListOrder.splice(source.index, 1);\r\n      newListOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        listOrder: newListOrder,\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const home = this.state.lists[source.droppableId];\r\n    const foreign = this.state.lists[destination.droppableId];\r\n\r\n    if (home === foreign) {\r\n      const newCardIds = Array.from(home.taskIds);\r\n      newCardIds.splice(source.index, 1);\r\n      newCardIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newList = {\r\n        ...home,\r\n        taskIds: newCardIds,\r\n      }\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        lists: {\r\n          ...this.state.lists,\r\n          [newList.id]: newList,\r\n        },\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // Moving from one list to another\r\n    const homeTaskIds = Array.from(home.taskIds);\r\n    homeTaskIds.splice(source.index, 1);\r\n\r\n    const newHome = {\r\n      ...home,\r\n      taskIds: homeTaskIds,\r\n    };\r\n\r\n    const foreignTaskIds = Array.from(foreign.taskIds);\r\n    foreignTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n    const newForeign = {\r\n      ...foreign,\r\n      taskIds: foreignTaskIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      lists: {\r\n        ...this.state.lists,\r\n        [newHome.id]: newHome,\r\n        [newForeign.id]: newForeign,\r\n      },\r\n    };\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { lists, cards, listOrder, styleType } = this.state;\r\n    return (\r\n      <div className=\"App\" style={styleType}>\r\n        {/*<SimpleStorage parent={this} prefix={\"Project_Management\"} />*/}\r\n        <BoardNav\r\n          handleBackgroundChange={this.handleBackgroundChange}\r\n          handleBackgroundColor={this.handleBackgroundColor}\r\n          handleBackgroundImage={this.handleBackgroundImage} />\r\n        <DragDropContext\r\n          onDragEnd={this.onDragEnd}\r\n        >\r\n          <Droppable\r\n            droppableId=\"all-columns\"\r\n            direction=\"horizontal\"\r\n            type=\"column\"\r\n            key={lists.id}\r\n          >\r\n            {(provided) => (\r\n              <div className=\"App-header\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {listOrder.map((listId: string, index: number) => {\r\n                  const list = lists[listId];\r\n                  const cardList = list.taskIds.map((id: string) => cards[id]);\r\n                  return (\r\n                    <List\r\n                      isSubmitted={list.title===\"\" ? false : true }\r\n                      key={list.id}\r\n                      listId={list.id}\r\n                      list={list}\r\n                      copyList={this.copyList}\r\n                      cardList={cardList}\r\n                      handleTitleChange={this.handleTitleChange}\r\n                      addCard={this.addCard}\r\n                      editCard={this.editCard}\r\n                      deleteCard={this.deleteCard}\r\n                      deleteList={this.deleteList}\r\n                      addCardDescription={this.addCardDescription}\r\n                      index={index}\r\n                    >\r\n                      {provided.placeholder}\r\n                    </List>\r\n                  );\r\n                })}\r\n\r\n                <button className=\"add-list-btn\" onClick={this.addList}>\r\n                  + Add another list\r\n          </button>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/scene3.4be96530.jpg\";"],"sourceRoot":""}